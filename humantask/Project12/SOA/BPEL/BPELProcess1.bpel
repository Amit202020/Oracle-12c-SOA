<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Fri Mar 05 10:18:45 IST 2021
  Author:  A687640
  Type: BPEL 2.0 Process
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="BPELProcess1"
         targetNamespace="http://xmlns.oracle.com/Application1/Project12/BPELProcess1"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:client="http://xmlns.oracle.com/Application1/Project12/BPELProcess1"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:ui="http://xmlns.oracle.com/soa/designer"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/bpel/workflow/taskService" xmlns:ns2="http://www.example.org"
         xmlns:task="http://xmlns.oracle.com/bpel/workflow/task"
         xmlns:wfcommon="http://xmlns.oracle.com/bpel/workflow/common"
         xmlns:wf="http://schemas.oracle.com/bpel/extensions/workflow"
         xmlns:ns3="http://xmlns.oracle.com/bpel/workflow/TaskEvidenceService">

    <import ui:processWSDL="true" namespace="http://xmlns.oracle.com/Application1/Project12/BPELProcess1" location="../WSDLs/BPELProcess1.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="bpelprocess1_client" partnerLinkType="client:BPELProcess1" myRole="BPELProcess1Provider" partnerRole="BPELProcess1Requester"/>
        <partnerLink name="Humantask1.TaskService" partnerLinkType="ns1:TaskService" partnerRole="TaskService"
                     myRole="TaskServiceCallbackListener"/>
    </partnerLinks>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable" messageType="client:BPELProcess1RequestMessage"/>

        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable" messageType="client:BPELProcess1ResponseMessage"/>
        <variable name="Humantask11_globalVariable" messageType="ns1:taskMessage"/>
    </variables>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in BPELProcess1.wsdl) -->
        <receive name="receiveInput" partnerLink="bpelprocess1_client" portType="client:BPELProcess1" operation="process" variable="inputVariable" createInstance="yes"/>
        <scope name="Humantask12" xmlns:wf="http://schemas.oracle.com/bpel/extensions/workflow"
               wf:key="Humantask11_globalVariable">
            <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:workflow"></bpelx:pattern>
            </bpelx:annotation>
            <variables>
                <variable name="initiateTaskInput" messageType="ns1:initiateTaskMessage"/>
                <variable name="initiateTaskResponseMessage" messageType="ns1:initiateTaskResponseMessage"/>
            </variables>
            <sequence>
                <assign name="Humantask12_AssignTaskAttributes">
                    <copy>
                        <from>number(3)</from>
                        <to variable="initiateTaskInput" part="payload"><query>task:task/task:priority</query></to>
                    </copy>
                    <copy>
                        <from>number(3)</from>
                        <to variable="initiateTaskInput" part="payload"><query>task:task/task:priority</query></to>
                    </copy>
                    <copy>
                        <from><literal><payload xmlns="http://xmlns.oracle.com/bpel/workflow/task">
	<request xmlns="http://www.example.org"/> 
</payload></literal></from>
                        <to variable="initiateTaskInput" part="payload"><query>task:task/task:payload</query></to>
                    </copy>
                    <copy>
                        <from variable="inputVariable" part="payload"/>
                        <to variable="initiateTaskInput" part="payload"><query>task:task/task:payload/ns2:request</query></to>
                    </copy>
                </assign>
                <invoke name="initiateTask_Humantask12" partnerLink="Humantask1.TaskService" operation="initiateTask"
                        portType="ns1:TaskService" inputVariable="initiateTaskInput"
                        outputVariable="initiateTaskResponseMessage"/>
                <receive name="receiveCompletedTask_Humantask12" partnerLink="Humantask1.TaskService"
                         portType="ns1:TaskServiceCallback" operation="onTaskCompleted"
                         variable="Humantask11_globalVariable" createInstance="no"/>
            </sequence>
        </scope>
        <if name="taskIf">
            <documentation>
                <![CDATA[Task outcome is APPROVE]]>
            </documentation>
            <condition>$Humantask11_globalVariable.payload/task:systemAttributes/task:outcome = 'APPROVE'</condition>
            <sequence>
                <assign name="CopyPayloadFromTask">
                    <copy>
                        <from>$Humantask11_globalVariable.payload/task:systemAttributes/task:outcome</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns2:orderStatus</to>
                    </copy>
                </assign>
            </sequence>
            <elseif>
                <documentation>
                    <![CDATA[Task outcome is REJECT]]>
                </documentation>
                <condition>$Humantask11_globalVariable.payload/task:systemAttributes/task:outcome = 'REJECT'</condition>
                <sequence>
                    <assign name="CopyPayloadFromTask">
                        <copy>
                            <from>$Humantask11_globalVariable.payload/task:systemAttributes/task:outcome</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/ns2:orderStatus</to>
                        </copy>
                    </assign>
                </sequence>
            </elseif>
        </if>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <invoke name="callbackClient" partnerLink="bpelprocess1_client" portType="client:BPELProcess1Callback" operation="processResponse" inputVariable="outputVariable"/>
    </sequence>
</process>